Una escuela universitaria requiere de un sistema para gestionar datos, entre los requisitos que se piden en este gestor se requiere de 3 roles, administrador que deberá poder tener acceso a todos los datos, profesor que deberá solamente tener acceso a modificar y ver calificaciones de los alumnos, también podrá dar de alta o de baja a algún alumno, por ultimo el rol alumno que solamente tendrá permisos de ver sus calificaciones y sus maestros, se necesitara también gestionar las materias y calificaciones de los alumnos.
En los datos de administrador se requiere de: nombre, apellido materno y paterno, correo, telefono matricula de trabajador y que rol cumple.
Los datos de profesor requieren de: nombre, apellidos, matricula de empleado, correo, teléfono, materias asignadas.
Los datos de los alumnos requiere de: nombre, apellidos, matricula de alumno, correo y materia.
Se deberá tener también los datos que son materias, calificaciones y nombre del profesor y alumno en un apartado.
Del lado de las materias se debe considerar lo siguiente: materia, código materia, salón.
Un maestro puede tener muchos alumnos y un alumno pueden tener muchos maestros al igual un administrador puede administrar muchos maestros y un maestro puede ser administrado por muchos alumnos, aplica lo mismo de administrador/alumno, cada materia puede tener muchos alumnos y un alumno puede tener muchas materias, lo mismo aplica profesor/materia.
Debe ser importante también considerar que cada rol debe contar con los permisos necesarios.

SCRIPT DE SQL:

Creacion de tablas:

CREATE TABLE Alumno (
  matriculaAlumno NUMERIC(5) NOT NULL,
  nombre VARCHAR(20),
  apellidos VARCHAR(40),
  correo VARCHAR(30),
  PRIMARY KEY(matriculaAlumno)
);

CREATE TABLE Profesor (
  matriculaProfe NUMERIC(5) NOT NULL,
  nombre VARCHAR(20),
  apellidos VARCHAR(40),
  correo VARCHAR(30),
  telefono NUMERIC(10),
  PRIMARY KEY(matriculaProfe)
);

CREATE TABLE Administrador (
  matriculaAdmin NUMERIC(5) NOT NULL,
  nombre VARCHAR(20),
  apellidos VARCHAR(40),
  correo VARCHAR(30),
  rol VARCHAR(20),
  PRIMARY KEY(matriculaAdmin)
);

CREATE TABLE Materias (
  codigoMateria VARCHAR(6) NOT NULL,
  matriculaProfe NUMERIC(5) NOT NULL,
  materia VARCHAR(20),
  salon VARCHAR(10),
  PRIMARY KEY(codigoMateria),
  FOREIGN KEY(matriculaProfe) REFERENCES Profesor(matriculaProfe)
);

CREATE TABLE Profesor_has_Alumno (
  matriculaProfe NUMERIC(5) NOT NULL,
  matriculaAlumno NUMERIC(5) NOT NULL,
  PRIMARY KEY(matriculaProfe, matriculaAlumno),
  FOREIGN KEY(matriculaProfe) REFERENCES Profesor(matriculaProfe),
  FOREIGN KEY(matriculaAlumno) REFERENCES Alumno(matriculaAlumno)
);

CREATE TABLE Administrador_has_Profesor (
  matriculaProfe NUMERIC(5) NOT NULL,
  matriculaAdmin NUMERIC(5) NOT NULL,
  PRIMARY KEY(matriculaProfe, matriculaAdmin),
  FOREIGN KEY(matriculaProfe) REFERENCES Profesor(matriculaProfe),
  FOREIGN KEY(matriculaAdmin) REFERENCES Administrador(matriculaAdmin)
);

CREATE TABLE Administrador_has_Alumno (
  matriculaAdmin NUMERIC(5) NOT NULL,
  matriculaAlumno NUMERIC(5) NOT NULL,
  PRIMARY KEY(matriculaAdmin, matriculaAlumno),
  FOREIGN KEY(matriculaAdmin) REFERENCES Administrador(matriculaAdmin),
  FOREIGN KEY(matriculaAlumno) REFERENCES Alumno(matriculaAlumno)
);

CREATE TABLE Calificaciones (
  matriculaAlumno NUMERIC(5) NOT NULL,
  codigoMateria VARCHAR(6) NOT NULL,
  calificacion NUMERIC(2,1),
  PRIMARY KEY(matriculaAlumno, codigoMateria),
  FOREIGN KEY(matriculaAlumno) REFERENCES Alumno(matriculaAlumno),
  FOREIGN KEY(codigoMateria) REFERENCES Materias(codigoMateria)
);

Creacion de usuarios:
CREATE USER admin IDENTIFIED BY administrador123;
CREATE USER profesor IDENTIFIED BY profesor123;
CREATE USER alumno IDENTIFIED BY alumno123;

Ceacion de bd/usuario sysadmin para la escuela:
CREATE USER escuela identified by escuela;
GRANT ALL PRIVILEGES TO escuela;

MODIFICACION DE PERMISOS:
Desde el usuario escuela:
GRANT connect TO alumno;
GRANT select ON escuela.calificaciones TO alumno;

GRANT connect TO profesor;
DECLARE
  sql_stmt VARCHAR2(1000);
BEGIN
  FOR table_rec IN (SELECT table_name FROM all_tables WHERE owner = 'ESCUELA')
  LOOP
    sql_stmt := 'GRANT SELECT, UPDATE ON ESCUELA.' || table_rec.table_name || ' TO PROFESOR';
    EXECUTE IMMEDIATE sql_stmt;
  END LOOP;
END;
/
REVOKE select, update ON escuela.administrador FROM profesor;
REVOKE select, update ON escuela.administrador_has_alumno FROM profesor;
REVOKE select, update ON escuela.administrador_has_profesor FROM profesor;
REVOKE select, update ON escuela.profesor FROM profesor;


GRANT CONNECT TO ADMIN;
DECLARE
  sql_stmt VARCHAR2(1000);
BEGIN
  FOR table_rec IN (SELECT table_name FROM all_tables WHERE owner = 'ESCUELA')
  LOOP
    sql_stmt := 'GRANT ALL PRIVILEGES ON ESCUELA.' || table_rec.table_name || ' TO admin';
    EXECUTE IMMEDIATE sql_stmt;
  END LOOP;
END;
/

INSERCION DE DATOS:
INSERT INTO Alumno VALUES (11111, 'Juan', 'Pérez García', 'juanperez@email.com');
INSERT INTO Alumno VALUES (22222, 'María', 'López Torres', 'marialopez@email.com');
INSERT INTO Alumno VALUES (33333, 'Pedro', 'Martínez Sánchez', 'pedromartinez@email.com');
INSERT INTO Alumno VALUES (44444, 'Ana', 'Fernández Gómez', 'anafernandez@email.com');
INSERT INTO Alumno VALUES (55555, 'Miguel', 'Rodríguez Jiménez', 'miguelrodriguez@email.com');

INSERT INTO Profesor (matriculaProfe, nombre, apellidos, correo, telefono) VALUES (12345, 'Juan', 'Pérez García', 'jperez@gmail.com', 8441234567);
INSERT INTO Profesor (matriculaProfe, nombre, apellidos, correo, telefono) VALUES (67890, 'María', 'González Sánchez', 'mgonzalez@gmail.com', 8442345678);
INSERT INTO Profesor (matriculaProfe, nombre, apellidos, correo, telefono) VALUES (13579, 'Pedro', 'López Hernández', 'plopez@gmail.com', 8443456789);
INSERT INTO Profesor (matriculaProfe, nombre, apellidos, correo, telefono) VALUES (24680, 'Ana', 'Martínez Rodríguez', 'amartinez@gmail.com', 8444567890);
INSERT INTO Profesor (matriculaProfe, nombre, apellidos, correo, telefono) VALUES (36912, 'Jorge', 'Sánchez Pérez', 'jsanchez@gmail.com', 8445678901);

INSERT INTO Administrador (matriculaAdmin, nombre, apellidos, correo, rol) VALUES (12345, 'Juan', 'Pérez García', 'juan.perez@mail.com', 'Jefe de Departamento');
INSERT INTO Administrador (matriculaAdmin, nombre, apellidos, correo, rol) VALUES (23456, 'María', 'González Rodríguez', 'maria.gonzalez@mail.com', 'Administrador de Sistemas');
INSERT INTO Administrador (matriculaAdmin, nombre, apellidos, correo, rol) VALUES (34567, 'Pedro', 'Martínez González', 'pedro.martinez@mail.com', 'Coordinador Académico');
INSERT INTO Administrador (matriculaAdmin, nombre, apellidos, correo, rol) VALUES (45678, 'Ana', 'Sánchez Vargas', 'ana.sanchez@mail.com', 'Encargada de Recursos Humanos');
INSERT INTO Administrador (matriculaAdmin, nombre, apellidos, correo, rol) VALUES (56789, 'José', 'Gutiérrez Fernández', 'jose.gutierrez@mail.com', 'Director General');

INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M001', 12345, 'Matemáticas', 'A101');
INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M002', 12345, 'Física', 'A102');
INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M003', 67890, 'Historia', 'B201');
INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M004', 13579, 'Inglés', 'C301');
INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M005', 24680, 'Biología', 'D401');
INSERT INTO Materias (codigoMateria, matriculaProfe, materia, salon) VALUES ('M006', 36912, 'Programación', 'E501');